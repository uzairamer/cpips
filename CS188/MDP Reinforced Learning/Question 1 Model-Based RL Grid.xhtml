<!-- Ahmed Ismail Khalid								Zulqarnain
	 150829												150913
	 BSCS VI-B											BSCS VI-B
     ahmedik95316@gmail.com								mustafa.zulqarnain123@gmail.com
     150829@students.au.edu.pk							150909@students.au.edu.pk    

				EDX Course : Artificial Intelligence				Topic : Reinforcement Learning
 -->



<problem>

<img src="/static/hw5_q1.png" width="300" align="middle"/>
  
<br/><br/><br/><br/>
  
<p><b>Conisder the observed episodes below :</b></p>
<br/>
  
<script type="loncapa/python">
import random
import numpy as np

###################
##Episode 1 Table##
###################
e1_a_south_c_r = np.random.uniform(-2,1)
e1_c_south_e_r = np.random.uniform(-2,1)
e1_e_exit_x_r = [+10,+15,+20]

E1_A_SOUTH_C_R = round(e1_a_south_c_r,1)
E1_C_SOUTH_E_R = round(e1_c_south_e_r,1)
E1_E_EXIT_X_R = random.choice(e1_e_exit_x_r)

#string1 = str(float(E1_A_SOUTH_C_R))
#string2 = str(float(E1_C_SOUTH_E_R))
#string3 = str(float(E1_E_EXIT_X_R))

String1 = str(float(E1_A_SOUTH_C_R))
String2 = str(float(E1_C_SOUTH_E_R))
String3 = str(float(E1_E_EXIT_X_R))

STRING1 = float(String1)
STRING2 = float(String2)
STRING3 = float(String3)

ANSWER = STRING1 + STRING2 + STRING3
#ANSWERsmall = string1 + string2 + string3
# convert each variable to string and then add

###################
##Episode 2 Table##
###################
e2_b_east_c_r = np.random.uniform(-2,1)
e2_c_south_d_r = np.random.uniform(-2,1)
e2_d_exit_x_r = [-10,-15,-20]

E2_B_EAST_C_R = round(e2_b_east_c_r,1)
E2_C_SOUTH_D_R = round(e2_c_south_d_r,1)
E2_D_EXIT_X_R = random.choice(e2_d_exit_x_r)

###################
##Episode 3 Table##
###################
e3_b_east_c_r = e2_b_east_c_r
e3_c_south_e_r = e1_c_south_e_r

E3_B_EAST_C_R = round(e3_b_east_c_r,1)
E3_C_SOUTH_E_R = round(e3_c_south_e_r,1)
E3_E_EXIT_X_R = E1_E_EXIT_X_R

###################
##Episode 4 Table##
###################
e4_a_south_c_r = e1_a_south_c_r
e4_c_south_e_r = e1_c_south_e_r

E4_A_SOUTH_C_R = round(e4_a_south_c_r,1)
E4_C_SOUTH_E_R = round(e4_c_south_e_r,1)
E4_E_EXIT_X_R = E1_E_EXIT_X_R


##################
##    Answers   ##
##################
VA = E1_A_SOUTH_C_R + E1_C_SOUTH_E_R + E1_E_EXIT_X_R

vb2 = E2_B_EAST_C_R + E2_C_SOUTH_D_R + E2_D_EXIT_X_R
#vb3 = 2
VB = vb2

vc1 = (E1_C_SOUTH_E_R + E1_E_EXIT_X_R) * 0.75
vc2 = (E2_C_SOUTH_D_R + E2_D_EXIT_X_R) * 0.25
VC = vc1 + vc2

VD = E2_D_EXIT_X_R

VE = E1_E_EXIT_X_R


###################################
## C TO NEXT STATE RANDOMIZATION ##
###################################
generate = ["D","E"]                                                                                                                         

e1_e_exit_x_r = [+10,+15,+20]
E1_E_EXIT_X_R = random.choice(e1_e_exit_x_r)
e2_d_exit_x_r = [-10,-15,-20]
E2_D_EXIT_X_R = random.choice(e2_d_exit_x_r)

                                                                                                                                             
c_ns1 = random.choice(generate)                                                                                                              
c_ns2 = random.choice(generate)                                                                                                              
c_ns3 = random.choice(generate)                                                                                                              
c_ns4 = random.choice(generate)

c_ns_d_r = round((np.random.uniform(-2,1)),1)
c_ns_e_r = round((np.random.uniform(-2,1)),1)

C_NS1_R = ""
C_NS2_R = ""
C_NS3_R = ""
C_NS4_R = ""

# what will the last observation be and what will it's reward be?
E1_T3_NS = ""
E2_T3_NS = ""
E3_T3_NS = ""
E4_T3_NS = ""

E1_T3_NS_R = ""
E2_T3_NS_R = ""
E3_T3_NS_R = ""
E4_T3_NS_R = ""

c_ns1_c_r = np.random.uniform(-2,1)
c_ns1_d_r = np.random.uniform(-2,1)
c_ns2_c_r = np.random.uniform(-2,1)
c_ns2_d_r = np.random.uniform(-2,1)
c_ns3_c_r = np.random.uniform(-2,1)
c_ns3_d_r = np.random.uniform(-2,1)
c_ns4_c_r = np.random.uniform(-2,1)
c_ns4_d_r = np.random.uniform(-2,1)

C_NS1 = ""
C_NS2 = ""
C_NS3 = ""
C_NS4 = ""

countD = 0
                                                                                                                                             
if (c_ns1 == "D") :
    C_NS1 = "D"                                                                                                                             
    C_NS1_R = c_ns_d_r
    countD = countD + 1
    E1_T3_NS = "D"
    E1_T3_NS_R = E2_D_EXIT_X_R
elif (c_ns1 == "E") :
    C_NS1 = "E"                                                                                                                                
    C_NS1_R = c_ns_e_r
    E1_T3_NS = "E"
    E1_T3_NS_R = E1_E_EXIT_X_R
                                                                                                                                             
                                                                                                                                             
if (c_ns2 == "D") :
    C_NS2 = "D"                                                                                                                                
    C_NS2_R = c_ns_d_r
    countD = countD + 1
    E2_T3_NS = "D"
    E2_T3_NS_R = E2_D_EXIT_X_R
elif (c_ns2 == "E") :
    C_NS2 = "E"
    C_NS2_R = c_ns_e_r
    E2_T3_NS = "E" 
    E2_T3_NS_R = E1_E_EXIT_X_R                                                                                                                           
                                                                                                                                             
if (c_ns3 == "D") :
    C_NS3 = "D"
    C_NS3_R = c_ns_d_r                                                                                                                                
    countD = countD + 1
    E3_T3_NS = "D"
    E3_T3_NS_R = E2_D_EXIT_X_R
elif (c_ns3 == "E") :
    C_NS3 = "E"   
    C_NS3_R = c_ns_e_r
    E3_T3_NS = "E"
    E3_T3_NS_R =  E1_E_EXIT_X_R                                                                                                                          
                                                                                                                                             
if (c_ns4 == "D") :
    C_NS4 = "D"
    C_NS4_R = c_ns_d_r
    countD = countD + 1                                                                                                                                
    E4_T3_NS = "D"
    E4_T3_NS_R = E2_D_EXIT_X_R
elif (c_ns4 == "E") :
    C_NS4 = "E"     
    C_NS4_R = c_ns_e_r
    E4_T3_NS = "E"
    E4_T3_NS_R = E1_E_EXIT_X_R

    

c_ns_d_count = countD/4
c_ns_e_count = 1 - c_ns_d_count
countE = 4 - countD

</script>

<style>

table {
    border: 1px solid black;
      display: inline-block;
}

td {
    border: none;
}

</style>

<table>
<caption><b>Episode 1</b></caption>
<tr>
  <td><b>A,</b></td>
  <td><b>south,</b></td>
  <td><b>C,</b></td>
  <td><b>$E1_A_SOUTH_C_R</b></td>
</tr>
<tr>
  <td><b>C,</b></td>
  <td><b>south,</b></td>
  <td><b>$C_NS1</b></td>
  <td><b>$C_NS1_R</b></td>
</tr>
<tr>
  <td><b>$E1_T3_NS,</b></td>
  <td><b>exit,</b></td>
  <td><b>X,</b></td>
  <td><b>$E1_T3_NS_R</b></td>
</tr>
</table>

<table>
<caption><b>Episode 2</b></caption>
<tr>
  <td><b>B,</b></td>
  <td><b>east,</b></td>
  <td><b>C,</b></td>
  <td><b>$E2_B_EAST_C_R</b></td>
</tr>
<tr>
  <td><b>C,</b></td>
  <td><b>south,</b></td>
  <td><b>$C_NS2,</b></td>
  <td><b>$C_NS2_R</b></td>
</tr>
<tr>
  <td><b>$E2_T3_NS,</b></td>
  <td><b>exit,</b></td>
  <td><b>X,</b></td>
  <td><b>$E2_T3_NS_R</b></td>
</tr>
</table>

<table>
<caption><b>Episode 3</b></caption>
<tr>
  <td><b>B,</b></td>
  <td><b>east,</b></td>
  <td><b>C,</b></td>
  <td><b>$E3_B_EAST_C_R</b></td>
</tr>
<tr>
  <td><b>C,</b></td>
  <td><b>south,</b></td>
  <td><b>$C_NS3,</b></td>
  <td><b>$C_NS3_R</b></td>
</tr>
<tr>
  <td><b>$E3_T3_NS,</b></td>
  <td><b>exit,</b></td>
  <td><b>X,</b></td>
  <td><b>$E3_T3_NS_R</b></td>
</tr>
</table>

<table>
<caption><b>Episode 4</b></caption>
<tr>
  <td><b>A,</b></td>
  <td><b>south,</b></td>
  <td><b>C,</b></td>
  <td><b>$E4_A_SOUTH_C_R</b></td>
</tr>
<tr>
  <td><b>C,</b></td>
  <td><b>south,</b></td>
  <td><b>$C_NS4,</b></td>
  <td><b>$C_NS4_R</b></td>
</tr>
<tr>
  <td><b>$E4_T3_NS,</b></td>
  <td><b>exit,</b></td>
  <td><b>X,</b></td>
  <td><b>$E4_T3_NS_R</b></td>
</tr>
</table>


<br/><br/><br/><br/>

<p><b>What model would be learned from the above observed episodes?</b></p>

<br/><br/>

<numericalresponse answer="1" type="ci">
    <label>T(A, south, C) =</label>
    <textline size="20"/>
    <solution>
      <div class="detailed-solution">
        <p>From the observed episodes, we can see that we are total 2 instances where we are currently on State A. On both these instances,we take the action to go South to State C, and both times the agent acutally goes to the <b>planned state which is C</b> and hence T(A, south, C) = 2/2 = 1</p>
      </div>
    </solution>
</numericalresponse>

<br/>

<numericalresponse answer="1" type="ci">
    <label>T(B, east, C) =</label>
    <textline size="20"/>
    <solution>
      <div class="detailed-solution">
        <p>From the observed episodes, we can see that we are total 2 instances where we are currently on State B. On both these instances,we take the action to go East to State C, and both times the agent acutally goes to the <b>planned state which is C</b> and hence T(B, east, C) = 2/2 = 1</p>
      </div>
    </solution>
</numericalresponse>

<br/>

<numericalresponse answer="$c_ns_e_count" type="ci">
    <label>T(C, south, E) =</label>
    <textline size="20"/>
    <solution>
      <div class="detailed-solution">
        <p>From the observed episodes, we can see that we are total 4 instances where we are currently on State C. On all four of these instances,we take the action to go South to State E, and on <b>$countE</b> occasions the agent acutally goes to the <b>planned state which is E</b> and hence T(C, south, E) = $countE/4 = $c_ns_e_count</p>
      </div>
    </solution>
</numericalresponse>

<br/>

<numericalresponse answer="$c_ns_d_count" type="ci">
    <label>T(C, south, D) =</label>
    <textline size="20"/>
    <solution>
      <div class="detailed-solution">
        <p>From the observed episodes, we can see that we are total 4 instances where we are currently on State C. On all four of these instances,we take the action to go South to State D, and on only <b>$countD</b> occasion the agent acutally goes to the <b>planned state which is D</b> and hence T(C, south, D) = $countD/4 = $c_ns_d_count</p>
      </div>
    </solution>
</numericalresponse>

<br/><br/>

<solution>
  <div class="detailed-solution">
    <p><b>NOTE : For this question, the rewards, or the living penalty is irrelevant and the focus should be on the number of times an action is taken to reach a desired state and the number of times the desired state is <i>actually</i> reached</b></p>
  </div>
</solution>

<br/>

</problem>